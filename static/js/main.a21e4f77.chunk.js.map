{"version":3,"sources":["Showcolumns.js","Board.js","CreateTask.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["Showcolumns","props","className","type","data-toggle","id","aria-haspopup","aria-expanded","class","map","column","column_name","href","onClick","move_to","index","currentlist","setList","Board","key","el","name","priority","move_up","width","height","viewBox","fill","xmlns","fill-rule","d","move_down","delete_post","CreateTask","useState","isOpenCreateTaskForm","setIsOpenCreateTaskForm","taskInput","setTaskInput","priorityInput","setPriorityInput","isActiveButtonTaskCreate","setIsActiveButtonTaskCreate","taskReset","placeholder","value","onChange","e","target","length","isnum","test","preventDefault","console","log","new_task","math","random","parseInt","addnewtask","disabled","Content","dolist","setDolist","progress","setProgress","review","setReview","done","setDone","post","i","listcopy","splice","filter","colums","copy_el","copylist2","push","copylist","setList_byname","sort_bypriority","sortedlist","max","index_max","forEach","newtask","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a21e4f77.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nfunction Showcolumns(props) {\n   const colums= [\n       \"dolist\",\n       \"progress\",\n       \"review\",\n       \"done\"\n    ];\n\n    return (\n       <div className=\"btn-group dropright\">\n            <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                    data-toggle=\"dropdown\"  id=\"dropdownMenuButton\" aria-haspopup=\"true\" aria-expanded=\"true\"> Move to\n            </button>\n\n           <div class=\"dropdown-menu\"  >\n                    {colums.map( column => {\n                            if (column != props.column_name)  {\n                                return(\n                                <div>\n                                    <a className=\"dropdown-item\" href=\"#\" onClick={() => {\n                                        props.move_to(column, props.index, props.currentlist, props.setList); }\n                                    }> {column} </a>\n                                </div> ) }\n                            })\n                    }\n            </div>\n        </div>\n    )\n}\n\nexport default Showcolumns;","import React, {useState} from 'react';\nimport Showcolumns from \"./Showcolumns\";\n\nfunction Board(props) {\n  return (\n      <div className=\"card Cardstyle\" key={props.el.id}>\n          <div className=\"card-body\" >\n\n              <h5 class=\"card-title\"> {props.el.name} </h5>\n\n              <p> Priority: {props.el.priority}</p>\n\n              <a href=\"#\" className=\"btn btn-default\" onClick={() => props.move_up(props.el.id, props.currentlist,props.setList )  } >  <span><svg\n                  className=\"bi bi-arrow-up-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                      <path fill-rule=\"evenodd\"\n                            d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n                      <path fill-rule=\"evenodd\"\n                            d=\"M4.646 8.354a.5.5 0 0 0 .708 0L8 5.707l2.646 2.647a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 0 0 0 .708z\"/>\n                      <path fill-rule=\"evenodd\" d=\"M8 11.5a.5.5 0 0 0 .5-.5V6a.5.5 0 0 0-1 0v5a.5.5 0 0 0 .5.5z\"/>\n                    </svg></span> </a>\n\n              <a href=\"#\" className=\"btn btn-default\" onClick={() => props.move_down(props.el.id, props.currentlist, props.setList )} ><span ><svg className=\"bi bi-arrow-down-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\n                                                                                                                                                                       fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path fill-rule=\"evenodd\"\n                            d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n                      <path fill-rule=\"evenodd\"\n                            d=\"M4.646 7.646a.5.5 0 0 1 .708 0L8 10.293l2.646-2.647a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z\"/>\n                      <path fill-rule=\"evenodd\" d=\"M8 4.5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5z\"/>\n                    </svg></span> </a>\n\n              <a href=\"#\" className=\"btn btn-default\" onClick={() => props.delete_post(props.el.id, props.currentlist,props.setList )  }>\n                    <span><svg className=\"bi bi-trash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                               xmlns=\"http://www.w3.org/2000/svg\">\n                          <path\n                              d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n                          <path fill-rule=\"evenodd\"\n                                d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n                        </svg></span> </a>\n\n              {/*Далее происходит меню на выбор перехода в колонку */}\n              <div className=\"\">\n                    <Showcolumns  column_name={props.column_name} index={props.index} move_to={props.move_to}  setList={props.setList} currentlist={props.currentlist} />\n              </div>\n\n          </div>\n\n      </div>\n\n  );\n}\n\nexport default Board;","import React, {useState} from 'react';\nimport './App.css';\nimport math from 'math';\n\n\nfunction CreateTask(props) {\n\n    const [isOpenCreateTaskForm, setIsOpenCreateTaskForm] = useState(false);\n    const [taskInput, setTaskInput] = useState('');\n    const [priorityInput, setPriorityInput] = useState('');\n    const [isActiveButtonTaskCreate, setIsActiveButtonTaskCreate] = useState(false);\n\n    const openCreateTaskForm = () => {\n        setIsOpenCreateTaskForm(true);\n    };\n    const onTaskChange = (e) => {\n        setIsActiveButtonTaskCreate(e.target.value.length > 4);\n        setTaskInput(e.target.value);\n    };\n    const onPriorityChange = (e) => {\n        let isnum = /^\\d+$/.test(e.target.value);\n        if (!isnum) { setPriorityInput(priorityInput) }\n        else { setPriorityInput(e.target.value); }\n    };\n\n    const taskReset = () => {\n        setTaskInput('');\n        setIsOpenCreateTaskForm(false);\n        setIsActiveButtonTaskCreate(false);\n        setPriorityInput('');\n    };\n\n    const taskSubmit = (e) => {\n        e.preventDefault();\n        console.log(taskInput);\n        console.log(priorityInput);\n        const new_task= {\n            id: math.random(),\n            name: taskInput,\n            priority: parseInt(priorityInput)\n        }\n\n        props.addnewtask(new_task); // Adding new task to our toDo list\n\n        taskReset();\n    };\n\n    return (\n        <div>\n            <div className=\"\">\n\n            {!isOpenCreateTaskForm &&\n            <button className=\"btn btn-primary\" onClick={openCreateTaskForm}>Create\n                Task</button>}\n\n            {isOpenCreateTaskForm &&\n            <form>\n                <div className=\"form-group\">\n                    <input type=\"text\" className=\"form-control\"\n                           placeholder={\"Enter a new task...\"}\n                           value={taskInput}\n                           onChange={onTaskChange}/>\n                    <input type=\"text\" className=\"\"\n                           placeholder={\"Priority of task\"}\n                           value={priorityInput}\n                           onChange={onPriorityChange}/>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\"\n                        onClick={taskSubmit}\n                        disabled={!isActiveButtonTaskCreate}>Submit\n                </button>\n                <button className=\"btn btn-secondary\"\n                        onClick={taskReset}\n                >Cancel\n                </button>\n            </form>\n            }\n            </div>\n         </div>\n\n    );\n}\n\nexport default CreateTask;","import React, {useState} from 'react';\nimport Board from \"./Board\";\nimport CreateTask from \"./CreateTask\";\n\nfunction Content(props) {\n\n  const todo_start = [\n    {\n      id: 11,\n      name: 'Create F1',\n      priority: 10\n    },\n    // <--\n    {\n      id: 12,\n      name: 'Create F2',\n      priority: 23\n    } ,\n    {\n      id: 13,\n      name: 'Create F3',\n      priority: 25\n    }\n  ];\n  const progress_start = [\n    {\n      id: 15,\n      name: 'Create F4',\n      priority: 16\n    },\n    {\n      id: 14,\n      name: 'Create F5',\n      priority: 20\n    }\n  ];\n  const review_start = [\n    {\n      id: 17,\n      name: 'Create F6',\n      priority: 15\n    },\n    {\n      id: 16,\n      name: 'Create F7',\n      priority: 9\n    }\n  ];\n  const done_start = [\n    {\n      id: 19,\n      name: 'Create F8',\n      priority: 40\n    }\n  ];\n\n  const  [dolist, setDolist] = useState(todo_start);\n  const  [progress, setProgress] = useState(progress_start);\n  const  [review, setReview] = useState(review_start);\n  const  [done, setDone] = useState(done_start);\n  //const  [columnsnames,setNames] = useState(startlistcolumns);\n\n  const addnewtask = (newtask) => {\n    console.log(\"newtaskid\",newtask);\n\n    setDolist(dolist => [...dolist,newtask]);\n\n    console.log(\"WholeList\",dolist);\n  }\n  const move_up = (id,currentlist,setList) => {\n    console.log(id);\n    let post=null;\n    let index=0;\n\n    currentlist.map( (el,i) => {\n                if(el.id===id) {  post=el; index=i; }\n    })\n    if (index===0) return;\n\n    let listcopy = [...currentlist];\n    listcopy.splice(index, 1);\n    listcopy.splice((index-1), 0, post);\n    setList(listcopy)\n  };\n\n  const move_down = (id,currentlist,setList ) => {\n    console.log(id);\n    let post=null;\n    let index=0;\n\n    currentlist.map( (el,i) => {\n      if(el.id===id) {  post=el; index=i; }\n    })\n    if (index===currentlist.length-1) return;\n\n    let listcopy = [...currentlist];\n    listcopy.splice(index, 1);\n    listcopy.splice((index+1), 0, post);\n    setList(listcopy)\n  };\n\n  const delete_post = (id,currentlist,setList ) => {\n    console.log(id);\n    setList( currentlist.filter( el => (el.id!==id) ));\n  };\n  const setList_byname = (name,copylist) => {\n\n    if (name=='dolist') {setDolist(copylist)};\n    if (name=='progress') {setProgress(copylist)};\n    if (name=='review') {setReview(copylist)};\n    if (name=='done') {setDone(copylist)};\n\n  }\n  const move_to = (name,index,currentlist,setList) => {\n    console.log(name);\n    const colums= {\n      'dolist': dolist,\n      'progress': progress,\n      'review': review,\n      \"done\": done\n    };\n\n    const copylist=[...currentlist];\n    const copy_el = copylist[index];\n    delete_post(currentlist[index].id, currentlist, setList );//Удаляем задание из тек списка\n\n    const copylist2=[...colums[name]];\n    copylist2.push(copy_el);\n    setList_byname(name,copylist2);\n  }\n\n  const sort_bypriority = (currentlist, setList ) => {\n    let listcopy = [...currentlist];\n    let sortedlist=[];\n    let max=-1, index_max=0;\n\n    while (listcopy.length!==0){\n        let max=-1, index_max=0;\n\n        listcopy.forEach( (el,i) => {\n            if (el.priority > max) {\n                  max=el.priority;\n                  index_max = i;\n                  }\n            })\n        sortedlist.push(listcopy[index_max]);\n        listcopy.splice(index_max,1);\n    }\n    setList(sortedlist);\n  }\n\n  return (\n      <div className=\"container-fluid\">\n\n        <div className=\"row\">\n            <h2>Kanban</h2>\n        </div>\n        <div className=\"row Createtask\">\n            <CreateTask addnewtask={addnewtask} />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-3\">\n              <h4> Todo </h4>\n              <div>\n                  <button className=\"btn btn-primary\" onClick={() => sort_bypriority(dolist,setDolist )  }>\n                      Sort by priority </button>\n              </div>\n              <div>\n                { dolist.map((el,i) => <Board\n                                           el={el} index={i}\n                                           currentlist={dolist}\n                                           setList={setDolist}\n                                           column_name={\"dolist\"}\n\n                                           delete_post={delete_post}\n                                           move_up={move_up}\n                                           move_down={move_down}\n                                           move_to={move_to}\n                                           />)\n                }\n              </div>\n          </div>\n\n          <div className=\"col-sm-3\">\n              <h4>In progress</h4>\n              <div>\n                  <button className=\"btn btn-primary\" onClick={() => sort_bypriority(progress,setProgress )  }>\n                      Sort by priority </button>\n              </div>\n              <div>\n                { progress.map((el,i) => <Board\n                                                 el={el} index={i}\n                                                 currentlist={progress}\n                                                 setList={setProgress}\n                                                 column_name={\"progress\"}\n\n                                                 delete_post={delete_post}\n                                                 move_up={move_up}\n                                                 move_down={move_down}\n                                                 move_to={move_to}\n                                                  />)\n                }\n              </div>\n          </div>\n\n            <div className=\"col-sm-3\">\n                <h4> Review</h4>\n                  <div>\n                      <button className=\"btn btn-primary\" onClick={() => sort_bypriority(review,setReview )  }>\n                              Sort by priority </button>\n                  </div>\n                  <div>\n                    { review.map((el,i) => <Board  el={el} index={i}\n                                                   currentlist={review}\n                                                   setList={setReview}\n                                                   column_name={\"review\"}\n\n                                                   delete_post={delete_post}\n                                                   move_up={move_up}\n                                                   move_down={move_down}\n                                                   move_to={move_to} />)\n                    }\n                  </div>\n\n            </div>\n\n            <div className=\"col-sm-3\">\n                <h4> Done </h4>\n                <div>\n                  <button className=\"btn btn-primary\" onClick={() => sort_bypriority(done,setDone )  }>\n                        Sort by priority </button>\n                </div>\n\n                <div>\n                { done.map((el,i) => <Board  el={el} index={i}\n                                             currentlist={done}\n                                             setList={setDone}\n                                             column_name={\"done\"}\n\n                                             delete_post={delete_post}\n                                             move_up={move_up}\n                                             move_down={move_down}\n                                             move_to={move_to} />)\n                }\n              </div>\n\n            </div>\n\n        </div>\n\n      </div>\n\n  );\n}\n\nexport default Content;","import React, { useState } from 'react';\nimport './App.css';\nimport Content from './Content';\n\nfunction App() {\n  return (\n    <div className=\"Content\">\n      <Content/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}